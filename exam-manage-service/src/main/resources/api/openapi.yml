openapi: 3.0.3
info:
    title: Exam manager - OpenAPI 3.0
    description: |-
        API for exam-manager-service
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
    version: 1.0.0

servers:
    - url: https://localhost:8080/manager

tags:
    - name: exam
      description: exam creating, updating and other opartions
    - name: test
      description: test creating, updating and other opartions
paths:
    /exam:
        post:
            tags:
                - exam
            summary: Create a new exam
            description: create a new exam
            operationId: createExam
            requestBody:
                description: For exam creating
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExamComponent'
                required: true
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExamComponent'
                '405':
                    description: Invalid input

    /test/{test_id}:
        get:
            tags:
                - test
            summary: get the test by id
            operationId: getTest
            parameters:
                - name: test_id
                  in: path
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TestComponent'
                '405':
                    description: Invalid id

components:
    schemas:
        ExamComponent:
            type: object
            required:
                - examiner_id
                - name
                - programming_language
                - tasks
            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                examiner_id:
                    type: integer
                    format: int64
                    example: 10
                name:
                    type: string
                description:
                    type: string
                programming_language:
                    type: string
                    enum:
                        - Java
                        - JavaScript
                        - Python
                max_duration:
                    type: integer
                    format: int128
                    default: 1000_000
                TTL:
                    type: integer
                    format: int128
                    default: 1000_000
                creation_date:
                    type: string
                    example: '2023-03-21 23:59:59'
                tasks:
                    minItems: 1
                    type: array
                    items:
                        $ref: '#/components/schemas/TaskComponent'

        TaskComponent:
            type: object
            required:
                - name
                - tests
            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                name:
                    type: string
                description:
                    type: string
                author_source_code:
                    type: string
                tests:
                    type: array
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/TestComponent'

        TestComponent:
            type: object
            required:
                - input_data
                - output_data
            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                name:
                    type: string
                task_id:
                    type: integer
                    format: int64
                input_data:
                    type: string
                output_data:
                    type: string