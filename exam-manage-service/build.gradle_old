plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.openapi.generator' version '7.1.0'
}

dependencies {
    implementation 'org.testng:testng:7.1.0'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.projectlombok:lombok:1.18.20'
    implementation 'com.google.code.gson:gson:2.8.9'
//    implementation 'org.openapitools:openapi-generator-gradle-plugin:5.3.0'
    implementation platform('org.junit:junit-bom:5.9.1')
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.junit.jupiter:junit-jupiter'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'io.gsonfire:gson-fire:1.8.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'

    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    runtimeOnly 'org.postgresql:postgresql:42.6.0'

    implementation project(':common:database')

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

//kapt {
//    arguments {
//        arg('mapstruct.defaultComponentModel', 'spring')
//        arg('spring.bean.ignore', 'false')
//    }
//}

openApiGenerate {
    generatorName.set('java')
    inputSpec.set("$rootDir/exam-manage-service/src/main/resources/api/openapi.yml")
    configOptions.set([
            interfaceOnly: "true"
    ])
}

sourceSets {
    main {
        java {srcDir "$buildDir/generate-resources/main/src"}
    }
}

tasks.test {
    useJUnitPlatform()
}

compileJava.dependsOn tasks.named("openApiGenerate")

